#!/usr/bin/env python
#
# Software License Agreement (BSD License)
#
# Copyright (c) 2010, Willow Garage, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials provided
#    with the distribution.
#  * Neither the name of the Willow Garage nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

##\author Kevin Watts
##\brief Kills ROS processes


import wx
import sys, subprocess, os
import string

import time

def kill_count():
    lst = subprocess.Popen(['ckill', 'list', '--regex', '.*ros.*'], stdout=subprocess.PIPE)
    (o,e) = lst.communicate()
    return len(o.splitlines())

def kill_ros(total_count):
    lev='SIGINT'
    print "Killing %d processes now..."%(total_count)

    total_progress = 50
    progress = 0.
    print string.center("PROGRESS",total_progress,"=")
    
    # Start by killing all roslaunch processes                                                                          
    subprocess.call(['sudo', 'ckill', 'kill', '--sig', lev, '--regex', 'python .*/roslaunch'])
    
    count = total_count
    for lev in ['SIGINT','SIGTERM','SIGKILL','SIGKILL']:
        start = time.time()
        while True:
            while float(total_count - count)/total_count > progress/total_progress:
                sys.stdout.write('#')
                sys.stdout.flush()
                progress += 1.

            if (count == 0):
                break
            time.sleep(.1)
            last_count = count
            count = kill_count()
            if (count < last_count):
                continue
            if (time.time() - start > 3):
                subprocess.call(['sudo', 'ckill', 'kill', '--sig', lev, '--regex', '.*ros.*'])
                break

    print ""
    if (count > 0):
        print "Some processes may have been left running:"
        subprocess.call(['sudo', 'ckill', 'list'])
        return False
    else:
        print "All processes killed successfully."
        return True



if __name__ == '__main__':
    app = wx.PySimpleApp()

    dlg = wx.MessageDialog(None, "Are you sure you want to kill ROS? This will terminate all ROS programs.",
                           "Confirm Kill ROS", wx.OK|wx.CANCEL)
    if dlg.ShowModal() != wx.ID_OK:
        sys.exit(1)

    count = kill_count()
    if count == 0:
        wx.MessageBox("No processes to kill. No ROS processes are running. If the computer is behaving oddly, restart the machine.", 
                      "No ROS Processes", wx.OK)
        sys.exit()

    if kill_ros(count):
      wx.MessageBox("All ROS processes killed.", "ROS Killed", wx.OK)
      sys.exit()

    wx.MessageBox("Unable to kill ROS processes. You may want to retry.",
                  "Unable to Kill ROS", wx.OK)
    sys.exit(1)
